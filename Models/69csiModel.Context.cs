//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _69CSI.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class csidbEntities : DbContext
    {
        public csidbEntities()
            : base("name=csidbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<associate_member> associate_member { get; set; }
        public DbSet<Conference> Conferences { get; set; }
        public DbSet<ConferenceUser> ConferenceUsers { get; set; }
        public DbSet<life_associate_member> life_associate_member { get; set; }
        public DbSet<life_member> life_member { get; set; }
        public DbSet<logbook> logbooks { get; set; }
        public DbSet<MyConference> MyConferences { get; set; }
        public DbSet<other_member> other_member { get; set; }
        public DbSet<tbl_CSI_69_Con_Accompanys> tbl_CSI_69_Con_Accompanys { get; set; }
        public DbSet<tbl_CSI_69_Con_Transections> tbl_CSI_69_Con_Transections { get; set; }
        public DbSet<tblAbstractCategory> tblAbstractCategories { get; set; }
        public DbSet<tblAbstractSubmissionDetail> tblAbstractSubmissionDetails { get; set; }
        public DbSet<tblregid> tblregids { get; set; }
        public DbSet<wbc_CsiMembersLoginDtls> wbc_CsiMembersLoginDtls { get; set; }
        public DbSet<wbc_NonCsiLoginDtls> wbc_NonCsiLoginDtls { get; set; }
        public DbSet<wbc_NonCsiMembers> wbc_NonCsiMembers { get; set; }
        public DbSet<wbc_WebcastMasters> wbc_WebcastMasters { get; set; }
        public DbSet<csi_mail_details> csi_mail_details { get; set; }
        public DbSet<csi_massmail_member> csi_massmail_member { get; set; }
        public DbSet<tblBlog> tblBlogs { get; set; }
        public DbSet<tblComment> tblComments { get; set; }
        public DbSet<tblCountryCode> tblCountryCodes { get; set; }
        public DbSet<tblLoginDetail> tblLoginDetails { get; set; }
        public DbSet<tbl_CSI_69_Con_RegistrationDetails> tbl_CSI_69_Con_RegistrationDetails { get; set; }
    
        public virtual int SP_CSI_69_Con_RegistrationDeleteCommand(Nullable<long> original_RegId)
        {
            var original_RegIdParameter = original_RegId.HasValue ?
                new ObjectParameter("Original_RegId", original_RegId) :
                new ObjectParameter("Original_RegId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CSI_69_Con_RegistrationDeleteCommand", original_RegIdParameter);
        }
    
        public virtual ObjectResult<SP_CSI_69_Con_RegistrationInsertCommand_Result> SP_CSI_69_Con_RegistrationInsertCommand(string prefix, string name, string dOB, string membership_Number, string category, string institution, string department, string designation, string degree, string nationality, string address, string city, string pin, string state, string country, string workPhone, string mobile, string fax, string email, string username, string password, string sponsorship, Nullable<int> status, Nullable<System.DateTime> createdDate, Nullable<long> modifiedBy, Nullable<System.DateTime> modifiedDate, Nullable<long> payment_Id, Nullable<decimal> payment_Amount, Nullable<long> extra1, Nullable<System.DateTime> extra2, string extra3, string extra4, string extra5, Nullable<long> extra6, Nullable<System.DateTime> extra7, string extra8, string extra9, string extra10)
        {
            var prefixParameter = prefix != null ?
                new ObjectParameter("Prefix", prefix) :
                new ObjectParameter("Prefix", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var dOBParameter = dOB != null ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(string));
    
            var membership_NumberParameter = membership_Number != null ?
                new ObjectParameter("Membership_Number", membership_Number) :
                new ObjectParameter("Membership_Number", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var institutionParameter = institution != null ?
                new ObjectParameter("Institution", institution) :
                new ObjectParameter("Institution", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var degreeParameter = degree != null ?
                new ObjectParameter("Degree", degree) :
                new ObjectParameter("Degree", typeof(string));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var pinParameter = pin != null ?
                new ObjectParameter("Pin", pin) :
                new ObjectParameter("Pin", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var workPhoneParameter = workPhone != null ?
                new ObjectParameter("WorkPhone", workPhone) :
                new ObjectParameter("WorkPhone", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var sponsorshipParameter = sponsorship != null ?
                new ObjectParameter("Sponsorship", sponsorship) :
                new ObjectParameter("Sponsorship", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(long));
    
            var modifiedDateParameter = modifiedDate.HasValue ?
                new ObjectParameter("ModifiedDate", modifiedDate) :
                new ObjectParameter("ModifiedDate", typeof(System.DateTime));
    
            var payment_IdParameter = payment_Id.HasValue ?
                new ObjectParameter("Payment_Id", payment_Id) :
                new ObjectParameter("Payment_Id", typeof(long));
    
            var payment_AmountParameter = payment_Amount.HasValue ?
                new ObjectParameter("Payment_Amount", payment_Amount) :
                new ObjectParameter("Payment_Amount", typeof(decimal));
    
            var extra1Parameter = extra1.HasValue ?
                new ObjectParameter("Extra1", extra1) :
                new ObjectParameter("Extra1", typeof(long));
    
            var extra2Parameter = extra2.HasValue ?
                new ObjectParameter("Extra2", extra2) :
                new ObjectParameter("Extra2", typeof(System.DateTime));
    
            var extra3Parameter = extra3 != null ?
                new ObjectParameter("Extra3", extra3) :
                new ObjectParameter("Extra3", typeof(string));
    
            var extra4Parameter = extra4 != null ?
                new ObjectParameter("Extra4", extra4) :
                new ObjectParameter("Extra4", typeof(string));
    
            var extra5Parameter = extra5 != null ?
                new ObjectParameter("Extra5", extra5) :
                new ObjectParameter("Extra5", typeof(string));
    
            var extra6Parameter = extra6.HasValue ?
                new ObjectParameter("Extra6", extra6) :
                new ObjectParameter("Extra6", typeof(long));
    
            var extra7Parameter = extra7.HasValue ?
                new ObjectParameter("Extra7", extra7) :
                new ObjectParameter("Extra7", typeof(System.DateTime));
    
            var extra8Parameter = extra8 != null ?
                new ObjectParameter("Extra8", extra8) :
                new ObjectParameter("Extra8", typeof(string));
    
            var extra9Parameter = extra9 != null ?
                new ObjectParameter("Extra9", extra9) :
                new ObjectParameter("Extra9", typeof(string));
    
            var extra10Parameter = extra10 != null ?
                new ObjectParameter("Extra10", extra10) :
                new ObjectParameter("Extra10", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CSI_69_Con_RegistrationInsertCommand_Result>("SP_CSI_69_Con_RegistrationInsertCommand", prefixParameter, nameParameter, dOBParameter, membership_NumberParameter, categoryParameter, institutionParameter, departmentParameter, designationParameter, degreeParameter, nationalityParameter, addressParameter, cityParameter, pinParameter, stateParameter, countryParameter, workPhoneParameter, mobileParameter, faxParameter, emailParameter, usernameParameter, passwordParameter, sponsorshipParameter, statusParameter, createdDateParameter, modifiedByParameter, modifiedDateParameter, payment_IdParameter, payment_AmountParameter, extra1Parameter, extra2Parameter, extra3Parameter, extra4Parameter, extra5Parameter, extra6Parameter, extra7Parameter, extra8Parameter, extra9Parameter, extra10Parameter);
        }
    
        public virtual ObjectResult<SP_CSI_69_Con_RegistrationSelectCommand_Result> SP_CSI_69_Con_RegistrationSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CSI_69_Con_RegistrationSelectCommand_Result>("SP_CSI_69_Con_RegistrationSelectCommand");
        }
    
        public virtual ObjectResult<SP_CSI_69_Con_RegistrationUpdateCommand_Result> SP_CSI_69_Con_RegistrationUpdateCommand(string prefix, string name, string dOB, string membership_Number, string category, string institution, string department, string designation, string degree, string nationality, string address, string city, string pin, string state, string country, string workPhone, string mobile, string fax, string email, string username, string password, string sponsorship, Nullable<int> status, Nullable<System.DateTime> createdDate, Nullable<long> modifiedBy, Nullable<System.DateTime> modifiedDate, Nullable<long> payment_Id, Nullable<decimal> payment_Amount, Nullable<long> extra1, Nullable<System.DateTime> extra2, string extra3, string extra4, string extra5, Nullable<long> extra6, Nullable<System.DateTime> extra7, string extra8, string extra9, string extra10, Nullable<long> original_RegId, Nullable<long> regId)
        {
            var prefixParameter = prefix != null ?
                new ObjectParameter("Prefix", prefix) :
                new ObjectParameter("Prefix", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var dOBParameter = dOB != null ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(string));
    
            var membership_NumberParameter = membership_Number != null ?
                new ObjectParameter("Membership_Number", membership_Number) :
                new ObjectParameter("Membership_Number", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var institutionParameter = institution != null ?
                new ObjectParameter("Institution", institution) :
                new ObjectParameter("Institution", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var degreeParameter = degree != null ?
                new ObjectParameter("Degree", degree) :
                new ObjectParameter("Degree", typeof(string));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var pinParameter = pin != null ?
                new ObjectParameter("Pin", pin) :
                new ObjectParameter("Pin", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var workPhoneParameter = workPhone != null ?
                new ObjectParameter("WorkPhone", workPhone) :
                new ObjectParameter("WorkPhone", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var sponsorshipParameter = sponsorship != null ?
                new ObjectParameter("Sponsorship", sponsorship) :
                new ObjectParameter("Sponsorship", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(long));
    
            var modifiedDateParameter = modifiedDate.HasValue ?
                new ObjectParameter("ModifiedDate", modifiedDate) :
                new ObjectParameter("ModifiedDate", typeof(System.DateTime));
    
            var payment_IdParameter = payment_Id.HasValue ?
                new ObjectParameter("Payment_Id", payment_Id) :
                new ObjectParameter("Payment_Id", typeof(long));
    
            var payment_AmountParameter = payment_Amount.HasValue ?
                new ObjectParameter("Payment_Amount", payment_Amount) :
                new ObjectParameter("Payment_Amount", typeof(decimal));
    
            var extra1Parameter = extra1.HasValue ?
                new ObjectParameter("Extra1", extra1) :
                new ObjectParameter("Extra1", typeof(long));
    
            var extra2Parameter = extra2.HasValue ?
                new ObjectParameter("Extra2", extra2) :
                new ObjectParameter("Extra2", typeof(System.DateTime));
    
            var extra3Parameter = extra3 != null ?
                new ObjectParameter("Extra3", extra3) :
                new ObjectParameter("Extra3", typeof(string));
    
            var extra4Parameter = extra4 != null ?
                new ObjectParameter("Extra4", extra4) :
                new ObjectParameter("Extra4", typeof(string));
    
            var extra5Parameter = extra5 != null ?
                new ObjectParameter("Extra5", extra5) :
                new ObjectParameter("Extra5", typeof(string));
    
            var extra6Parameter = extra6.HasValue ?
                new ObjectParameter("Extra6", extra6) :
                new ObjectParameter("Extra6", typeof(long));
    
            var extra7Parameter = extra7.HasValue ?
                new ObjectParameter("Extra7", extra7) :
                new ObjectParameter("Extra7", typeof(System.DateTime));
    
            var extra8Parameter = extra8 != null ?
                new ObjectParameter("Extra8", extra8) :
                new ObjectParameter("Extra8", typeof(string));
    
            var extra9Parameter = extra9 != null ?
                new ObjectParameter("Extra9", extra9) :
                new ObjectParameter("Extra9", typeof(string));
    
            var extra10Parameter = extra10 != null ?
                new ObjectParameter("Extra10", extra10) :
                new ObjectParameter("Extra10", typeof(string));
    
            var original_RegIdParameter = original_RegId.HasValue ?
                new ObjectParameter("Original_RegId", original_RegId) :
                new ObjectParameter("Original_RegId", typeof(long));
    
            var regIdParameter = regId.HasValue ?
                new ObjectParameter("RegId", regId) :
                new ObjectParameter("RegId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CSI_69_Con_RegistrationUpdateCommand_Result>("SP_CSI_69_Con_RegistrationUpdateCommand", prefixParameter, nameParameter, dOBParameter, membership_NumberParameter, categoryParameter, institutionParameter, departmentParameter, designationParameter, degreeParameter, nationalityParameter, addressParameter, cityParameter, pinParameter, stateParameter, countryParameter, workPhoneParameter, mobileParameter, faxParameter, emailParameter, usernameParameter, passwordParameter, sponsorshipParameter, statusParameter, createdDateParameter, modifiedByParameter, modifiedDateParameter, payment_IdParameter, payment_AmountParameter, extra1Parameter, extra2Parameter, extra3Parameter, extra4Parameter, extra5Parameter, extra6Parameter, extra7Parameter, extra8Parameter, extra9Parameter, extra10Parameter, original_RegIdParameter, regIdParameter);
        }
    
        public virtual int SP_Insert(ObjectParameter sl, string names, string email)
        {
            var namesParameter = names != null ?
                new ObjectParameter("names", names) :
                new ObjectParameter("names", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insert", sl, namesParameter, emailParameter);
        }
    
        public virtual int tbl_CSI_69_Con_TransectionDeleteCommand(Nullable<long> original_TransId)
        {
            var original_TransIdParameter = original_TransId.HasValue ?
                new ObjectParameter("Original_TransId", original_TransId) :
                new ObjectParameter("Original_TransId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tbl_CSI_69_Con_TransectionDeleteCommand", original_TransIdParameter);
        }
    
        public virtual ObjectResult<tbl_CSI_69_Con_TransectionInsertCommand_Result> tbl_CSI_69_Con_TransectionInsertCommand(Nullable<long> userId, Nullable<decimal> amountToPay, Nullable<decimal> amountPaid, Nullable<System.DateTime> transDate, string status, string remarks, string extra1, Nullable<System.DateTime> extra2, string extra3, string extra4, string extra5, Nullable<long> extra6, Nullable<System.DateTime> extra7, string extra8, string extra9, string extra10)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var amountToPayParameter = amountToPay.HasValue ?
                new ObjectParameter("AmountToPay", amountToPay) :
                new ObjectParameter("AmountToPay", typeof(decimal));
    
            var amountPaidParameter = amountPaid.HasValue ?
                new ObjectParameter("AmountPaid", amountPaid) :
                new ObjectParameter("AmountPaid", typeof(decimal));
    
            var transDateParameter = transDate.HasValue ?
                new ObjectParameter("TransDate", transDate) :
                new ObjectParameter("TransDate", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var extra1Parameter = extra1 != null ?
                new ObjectParameter("Extra1", extra1) :
                new ObjectParameter("Extra1", typeof(string));
    
            var extra2Parameter = extra2.HasValue ?
                new ObjectParameter("Extra2", extra2) :
                new ObjectParameter("Extra2", typeof(System.DateTime));
    
            var extra3Parameter = extra3 != null ?
                new ObjectParameter("Extra3", extra3) :
                new ObjectParameter("Extra3", typeof(string));
    
            var extra4Parameter = extra4 != null ?
                new ObjectParameter("Extra4", extra4) :
                new ObjectParameter("Extra4", typeof(string));
    
            var extra5Parameter = extra5 != null ?
                new ObjectParameter("Extra5", extra5) :
                new ObjectParameter("Extra5", typeof(string));
    
            var extra6Parameter = extra6.HasValue ?
                new ObjectParameter("Extra6", extra6) :
                new ObjectParameter("Extra6", typeof(long));
    
            var extra7Parameter = extra7.HasValue ?
                new ObjectParameter("Extra7", extra7) :
                new ObjectParameter("Extra7", typeof(System.DateTime));
    
            var extra8Parameter = extra8 != null ?
                new ObjectParameter("Extra8", extra8) :
                new ObjectParameter("Extra8", typeof(string));
    
            var extra9Parameter = extra9 != null ?
                new ObjectParameter("Extra9", extra9) :
                new ObjectParameter("Extra9", typeof(string));
    
            var extra10Parameter = extra10 != null ?
                new ObjectParameter("Extra10", extra10) :
                new ObjectParameter("Extra10", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_CSI_69_Con_TransectionInsertCommand_Result>("tbl_CSI_69_Con_TransectionInsertCommand", userIdParameter, amountToPayParameter, amountPaidParameter, transDateParameter, statusParameter, remarksParameter, extra1Parameter, extra2Parameter, extra3Parameter, extra4Parameter, extra5Parameter, extra6Parameter, extra7Parameter, extra8Parameter, extra9Parameter, extra10Parameter);
        }
    
        public virtual ObjectResult<tbl_CSI_69_Con_TransectionSelectCommand_Result> tbl_CSI_69_Con_TransectionSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_CSI_69_Con_TransectionSelectCommand_Result>("tbl_CSI_69_Con_TransectionSelectCommand");
        }
    
        public virtual ObjectResult<tbl_CSI_69_Con_TransectionUpdateCommand_Result> tbl_CSI_69_Con_TransectionUpdateCommand(Nullable<long> userId, Nullable<decimal> amountToPay, Nullable<decimal> amountPaid, Nullable<System.DateTime> transDate, string status, string remarks, string extra1, Nullable<System.DateTime> extra2, string extra3, string extra4, string extra5, Nullable<long> extra6, Nullable<System.DateTime> extra7, string extra8, string extra9, string extra10, Nullable<long> original_TransId, Nullable<long> transId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var amountToPayParameter = amountToPay.HasValue ?
                new ObjectParameter("AmountToPay", amountToPay) :
                new ObjectParameter("AmountToPay", typeof(decimal));
    
            var amountPaidParameter = amountPaid.HasValue ?
                new ObjectParameter("AmountPaid", amountPaid) :
                new ObjectParameter("AmountPaid", typeof(decimal));
    
            var transDateParameter = transDate.HasValue ?
                new ObjectParameter("TransDate", transDate) :
                new ObjectParameter("TransDate", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var extra1Parameter = extra1 != null ?
                new ObjectParameter("Extra1", extra1) :
                new ObjectParameter("Extra1", typeof(string));
    
            var extra2Parameter = extra2.HasValue ?
                new ObjectParameter("Extra2", extra2) :
                new ObjectParameter("Extra2", typeof(System.DateTime));
    
            var extra3Parameter = extra3 != null ?
                new ObjectParameter("Extra3", extra3) :
                new ObjectParameter("Extra3", typeof(string));
    
            var extra4Parameter = extra4 != null ?
                new ObjectParameter("Extra4", extra4) :
                new ObjectParameter("Extra4", typeof(string));
    
            var extra5Parameter = extra5 != null ?
                new ObjectParameter("Extra5", extra5) :
                new ObjectParameter("Extra5", typeof(string));
    
            var extra6Parameter = extra6.HasValue ?
                new ObjectParameter("Extra6", extra6) :
                new ObjectParameter("Extra6", typeof(long));
    
            var extra7Parameter = extra7.HasValue ?
                new ObjectParameter("Extra7", extra7) :
                new ObjectParameter("Extra7", typeof(System.DateTime));
    
            var extra8Parameter = extra8 != null ?
                new ObjectParameter("Extra8", extra8) :
                new ObjectParameter("Extra8", typeof(string));
    
            var extra9Parameter = extra9 != null ?
                new ObjectParameter("Extra9", extra9) :
                new ObjectParameter("Extra9", typeof(string));
    
            var extra10Parameter = extra10 != null ?
                new ObjectParameter("Extra10", extra10) :
                new ObjectParameter("Extra10", typeof(string));
    
            var original_TransIdParameter = original_TransId.HasValue ?
                new ObjectParameter("Original_TransId", original_TransId) :
                new ObjectParameter("Original_TransId", typeof(long));
    
            var transIdParameter = transId.HasValue ?
                new ObjectParameter("TransId", transId) :
                new ObjectParameter("TransId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_CSI_69_Con_TransectionUpdateCommand_Result>("tbl_CSI_69_Con_TransectionUpdateCommand", userIdParameter, amountToPayParameter, amountPaidParameter, transDateParameter, statusParameter, remarksParameter, extra1Parameter, extra2Parameter, extra3Parameter, extra4Parameter, extra5Parameter, extra6Parameter, extra7Parameter, extra8Parameter, extra9Parameter, extra10Parameter, original_TransIdParameter, transIdParameter);
        }
    
        public virtual int usp_AddBlog(string blogTitle, string blogDetails, string memberId, string authorName, ObjectParameter blogId, ObjectParameter errorOut)
        {
            var blogTitleParameter = blogTitle != null ?
                new ObjectParameter("BlogTitle", blogTitle) :
                new ObjectParameter("BlogTitle", typeof(string));
    
            var blogDetailsParameter = blogDetails != null ?
                new ObjectParameter("BlogDetails", blogDetails) :
                new ObjectParameter("BlogDetails", typeof(string));
    
            var memberIdParameter = memberId != null ?
                new ObjectParameter("MemberId", memberId) :
                new ObjectParameter("MemberId", typeof(string));
    
            var authorNameParameter = authorName != null ?
                new ObjectParameter("AuthorName", authorName) :
                new ObjectParameter("AuthorName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AddBlog", blogTitleParameter, blogDetailsParameter, memberIdParameter, authorNameParameter, blogId, errorOut);
        }
    
        public virtual int usp_AddClientDetails(string clcode, string name, string category, Nullable<int> strength, string site, Nullable<int> exhrs, Nullable<decimal> minwage, Nullable<decimal> examt, Nullable<decimal> basicp, Nullable<decimal> basic, Nullable<decimal> hrap, Nullable<decimal> hra, Nullable<decimal> washp, Nullable<decimal> wash, Nullable<decimal> convp, Nullable<decimal> conv, Nullable<decimal> tiffinp, Nullable<decimal> tiffin, Nullable<decimal> pfp, Nullable<decimal> pf, Nullable<decimal> esicp, Nullable<decimal> esic, Nullable<decimal> bonusp, Nullable<decimal> bonus, Nullable<decimal> gratuityp, Nullable<decimal> gratuity, Nullable<decimal> leavep, Nullable<decimal> leaveamt, Nullable<decimal> rchp, Nullable<decimal> rchamt, Nullable<decimal> adminp, Nullable<decimal> adminamt, Nullable<decimal> svcchgp, Nullable<decimal> svcchg, Nullable<decimal> total1, Nullable<decimal> total2, Nullable<decimal> total3, Nullable<decimal> trcost, Nullable<decimal> macost, Nullable<decimal> mobcost, Nullable<decimal> unicost, Nullable<decimal> nholicost, Nullable<decimal> incentive, Nullable<decimal> total5, Nullable<decimal> total4, Nullable<decimal> billrate, Nullable<decimal> workDays, Nullable<decimal> empLeavep, Nullable<decimal> empLeaveAmt, Nullable<decimal> leaveAdd, Nullable<decimal> empBonusp, Nullable<decimal> empBonusAmt, Nullable<decimal> bonusAdd, Nullable<int> esicAllow, ObjectParameter errorOut)
        {
            var clcodeParameter = clcode != null ?
                new ObjectParameter("clcode", clcode) :
                new ObjectParameter("clcode", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(string));
    
            var strengthParameter = strength.HasValue ?
                new ObjectParameter("strength", strength) :
                new ObjectParameter("strength", typeof(int));
    
            var siteParameter = site != null ?
                new ObjectParameter("site", site) :
                new ObjectParameter("site", typeof(string));
    
            var exhrsParameter = exhrs.HasValue ?
                new ObjectParameter("exhrs", exhrs) :
                new ObjectParameter("exhrs", typeof(int));
    
            var minwageParameter = minwage.HasValue ?
                new ObjectParameter("minwage", minwage) :
                new ObjectParameter("minwage", typeof(decimal));
    
            var examtParameter = examt.HasValue ?
                new ObjectParameter("examt", examt) :
                new ObjectParameter("examt", typeof(decimal));
    
            var basicpParameter = basicp.HasValue ?
                new ObjectParameter("basicp", basicp) :
                new ObjectParameter("basicp", typeof(decimal));
    
            var basicParameter = basic.HasValue ?
                new ObjectParameter("basic", basic) :
                new ObjectParameter("basic", typeof(decimal));
    
            var hrapParameter = hrap.HasValue ?
                new ObjectParameter("hrap", hrap) :
                new ObjectParameter("hrap", typeof(decimal));
    
            var hraParameter = hra.HasValue ?
                new ObjectParameter("hra", hra) :
                new ObjectParameter("hra", typeof(decimal));
    
            var washpParameter = washp.HasValue ?
                new ObjectParameter("washp", washp) :
                new ObjectParameter("washp", typeof(decimal));
    
            var washParameter = wash.HasValue ?
                new ObjectParameter("wash", wash) :
                new ObjectParameter("wash", typeof(decimal));
    
            var convpParameter = convp.HasValue ?
                new ObjectParameter("convp", convp) :
                new ObjectParameter("convp", typeof(decimal));
    
            var convParameter = conv.HasValue ?
                new ObjectParameter("conv", conv) :
                new ObjectParameter("conv", typeof(decimal));
    
            var tiffinpParameter = tiffinp.HasValue ?
                new ObjectParameter("tiffinp", tiffinp) :
                new ObjectParameter("tiffinp", typeof(decimal));
    
            var tiffinParameter = tiffin.HasValue ?
                new ObjectParameter("tiffin", tiffin) :
                new ObjectParameter("tiffin", typeof(decimal));
    
            var pfpParameter = pfp.HasValue ?
                new ObjectParameter("pfp", pfp) :
                new ObjectParameter("pfp", typeof(decimal));
    
            var pfParameter = pf.HasValue ?
                new ObjectParameter("pf", pf) :
                new ObjectParameter("pf", typeof(decimal));
    
            var esicpParameter = esicp.HasValue ?
                new ObjectParameter("esicp", esicp) :
                new ObjectParameter("esicp", typeof(decimal));
    
            var esicParameter = esic.HasValue ?
                new ObjectParameter("esic", esic) :
                new ObjectParameter("esic", typeof(decimal));
    
            var bonuspParameter = bonusp.HasValue ?
                new ObjectParameter("bonusp", bonusp) :
                new ObjectParameter("bonusp", typeof(decimal));
    
            var bonusParameter = bonus.HasValue ?
                new ObjectParameter("bonus", bonus) :
                new ObjectParameter("bonus", typeof(decimal));
    
            var gratuitypParameter = gratuityp.HasValue ?
                new ObjectParameter("gratuityp", gratuityp) :
                new ObjectParameter("gratuityp", typeof(decimal));
    
            var gratuityParameter = gratuity.HasValue ?
                new ObjectParameter("gratuity", gratuity) :
                new ObjectParameter("gratuity", typeof(decimal));
    
            var leavepParameter = leavep.HasValue ?
                new ObjectParameter("leavep", leavep) :
                new ObjectParameter("leavep", typeof(decimal));
    
            var leaveamtParameter = leaveamt.HasValue ?
                new ObjectParameter("leaveamt", leaveamt) :
                new ObjectParameter("leaveamt", typeof(decimal));
    
            var rchpParameter = rchp.HasValue ?
                new ObjectParameter("rchp", rchp) :
                new ObjectParameter("rchp", typeof(decimal));
    
            var rchamtParameter = rchamt.HasValue ?
                new ObjectParameter("rchamt", rchamt) :
                new ObjectParameter("rchamt", typeof(decimal));
    
            var adminpParameter = adminp.HasValue ?
                new ObjectParameter("adminp", adminp) :
                new ObjectParameter("adminp", typeof(decimal));
    
            var adminamtParameter = adminamt.HasValue ?
                new ObjectParameter("adminamt", adminamt) :
                new ObjectParameter("adminamt", typeof(decimal));
    
            var svcchgpParameter = svcchgp.HasValue ?
                new ObjectParameter("svcchgp", svcchgp) :
                new ObjectParameter("svcchgp", typeof(decimal));
    
            var svcchgParameter = svcchg.HasValue ?
                new ObjectParameter("svcchg", svcchg) :
                new ObjectParameter("svcchg", typeof(decimal));
    
            var total1Parameter = total1.HasValue ?
                new ObjectParameter("total1", total1) :
                new ObjectParameter("total1", typeof(decimal));
    
            var total2Parameter = total2.HasValue ?
                new ObjectParameter("total2", total2) :
                new ObjectParameter("total2", typeof(decimal));
    
            var total3Parameter = total3.HasValue ?
                new ObjectParameter("total3", total3) :
                new ObjectParameter("total3", typeof(decimal));
    
            var trcostParameter = trcost.HasValue ?
                new ObjectParameter("trcost", trcost) :
                new ObjectParameter("trcost", typeof(decimal));
    
            var macostParameter = macost.HasValue ?
                new ObjectParameter("macost", macost) :
                new ObjectParameter("macost", typeof(decimal));
    
            var mobcostParameter = mobcost.HasValue ?
                new ObjectParameter("mobcost", mobcost) :
                new ObjectParameter("mobcost", typeof(decimal));
    
            var unicostParameter = unicost.HasValue ?
                new ObjectParameter("unicost", unicost) :
                new ObjectParameter("unicost", typeof(decimal));
    
            var nholicostParameter = nholicost.HasValue ?
                new ObjectParameter("nholicost", nholicost) :
                new ObjectParameter("nholicost", typeof(decimal));
    
            var incentiveParameter = incentive.HasValue ?
                new ObjectParameter("incentive", incentive) :
                new ObjectParameter("incentive", typeof(decimal));
    
            var total5Parameter = total5.HasValue ?
                new ObjectParameter("total5", total5) :
                new ObjectParameter("total5", typeof(decimal));
    
            var total4Parameter = total4.HasValue ?
                new ObjectParameter("total4", total4) :
                new ObjectParameter("total4", typeof(decimal));
    
            var billrateParameter = billrate.HasValue ?
                new ObjectParameter("billrate", billrate) :
                new ObjectParameter("billrate", typeof(decimal));
    
            var workDaysParameter = workDays.HasValue ?
                new ObjectParameter("WorkDays", workDays) :
                new ObjectParameter("WorkDays", typeof(decimal));
    
            var empLeavepParameter = empLeavep.HasValue ?
                new ObjectParameter("EmpLeavep", empLeavep) :
                new ObjectParameter("EmpLeavep", typeof(decimal));
    
            var empLeaveAmtParameter = empLeaveAmt.HasValue ?
                new ObjectParameter("EmpLeaveAmt", empLeaveAmt) :
                new ObjectParameter("EmpLeaveAmt", typeof(decimal));
    
            var leaveAddParameter = leaveAdd.HasValue ?
                new ObjectParameter("LeaveAdd", leaveAdd) :
                new ObjectParameter("LeaveAdd", typeof(decimal));
    
            var empBonuspParameter = empBonusp.HasValue ?
                new ObjectParameter("EmpBonusp", empBonusp) :
                new ObjectParameter("EmpBonusp", typeof(decimal));
    
            var empBonusAmtParameter = empBonusAmt.HasValue ?
                new ObjectParameter("EmpBonusAmt", empBonusAmt) :
                new ObjectParameter("EmpBonusAmt", typeof(decimal));
    
            var bonusAddParameter = bonusAdd.HasValue ?
                new ObjectParameter("BonusAdd", bonusAdd) :
                new ObjectParameter("BonusAdd", typeof(decimal));
    
            var esicAllowParameter = esicAllow.HasValue ?
                new ObjectParameter("EsicAllow", esicAllow) :
                new ObjectParameter("EsicAllow", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AddClientDetails", clcodeParameter, nameParameter, categoryParameter, strengthParameter, siteParameter, exhrsParameter, minwageParameter, examtParameter, basicpParameter, basicParameter, hrapParameter, hraParameter, washpParameter, washParameter, convpParameter, convParameter, tiffinpParameter, tiffinParameter, pfpParameter, pfParameter, esicpParameter, esicParameter, bonuspParameter, bonusParameter, gratuitypParameter, gratuityParameter, leavepParameter, leaveamtParameter, rchpParameter, rchamtParameter, adminpParameter, adminamtParameter, svcchgpParameter, svcchgParameter, total1Parameter, total2Parameter, total3Parameter, trcostParameter, macostParameter, mobcostParameter, unicostParameter, nholicostParameter, incentiveParameter, total5Parameter, total4Parameter, billrateParameter, workDaysParameter, empLeavepParameter, empLeaveAmtParameter, leaveAddParameter, empBonuspParameter, empBonusAmtParameter, bonusAddParameter, esicAllowParameter, errorOut);
        }
    
        public virtual int usp_AddClientDetails2(string clcode, string name, string category, Nullable<int> strength, string site, Nullable<int> exhrs, Nullable<decimal> minwage, Nullable<decimal> examt, Nullable<decimal> basicp, Nullable<decimal> basic, Nullable<decimal> hrap, Nullable<decimal> hra, Nullable<decimal> washp, Nullable<decimal> wash, Nullable<decimal> convp, Nullable<decimal> conv, Nullable<decimal> tiffinp, Nullable<decimal> tiffin, Nullable<decimal> pfp, Nullable<decimal> pf, Nullable<decimal> esicp, Nullable<decimal> esic, Nullable<decimal> bonusp, Nullable<decimal> bonus, Nullable<decimal> gratuityp, Nullable<decimal> gratuity, Nullable<decimal> leavep, Nullable<decimal> leaveamt, Nullable<decimal> rchp, Nullable<decimal> rchamt, Nullable<decimal> adminp, Nullable<decimal> adminamt, Nullable<decimal> svcchgp, Nullable<decimal> svcchg, Nullable<decimal> total1, Nullable<decimal> total2, Nullable<decimal> total3, Nullable<decimal> trcost, Nullable<decimal> macost, Nullable<decimal> mobcost, Nullable<decimal> unicost, Nullable<decimal> nholicost, Nullable<decimal> incentive, Nullable<decimal> total5, Nullable<decimal> total4, Nullable<decimal> billrate, Nullable<decimal> workDays, Nullable<decimal> empLeavep, Nullable<decimal> empLeaveAmt, Nullable<decimal> leaveAdd, Nullable<decimal> empBonusp, Nullable<decimal> empBonusAmt, Nullable<decimal> bonusAdd, Nullable<int> esicAllow, ObjectParameter errorOut)
        {
            var clcodeParameter = clcode != null ?
                new ObjectParameter("clcode", clcode) :
                new ObjectParameter("clcode", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(string));
    
            var strengthParameter = strength.HasValue ?
                new ObjectParameter("strength", strength) :
                new ObjectParameter("strength", typeof(int));
    
            var siteParameter = site != null ?
                new ObjectParameter("site", site) :
                new ObjectParameter("site", typeof(string));
    
            var exhrsParameter = exhrs.HasValue ?
                new ObjectParameter("exhrs", exhrs) :
                new ObjectParameter("exhrs", typeof(int));
    
            var minwageParameter = minwage.HasValue ?
                new ObjectParameter("minwage", minwage) :
                new ObjectParameter("minwage", typeof(decimal));
    
            var examtParameter = examt.HasValue ?
                new ObjectParameter("examt", examt) :
                new ObjectParameter("examt", typeof(decimal));
    
            var basicpParameter = basicp.HasValue ?
                new ObjectParameter("basicp", basicp) :
                new ObjectParameter("basicp", typeof(decimal));
    
            var basicParameter = basic.HasValue ?
                new ObjectParameter("basic", basic) :
                new ObjectParameter("basic", typeof(decimal));
    
            var hrapParameter = hrap.HasValue ?
                new ObjectParameter("hrap", hrap) :
                new ObjectParameter("hrap", typeof(decimal));
    
            var hraParameter = hra.HasValue ?
                new ObjectParameter("hra", hra) :
                new ObjectParameter("hra", typeof(decimal));
    
            var washpParameter = washp.HasValue ?
                new ObjectParameter("washp", washp) :
                new ObjectParameter("washp", typeof(decimal));
    
            var washParameter = wash.HasValue ?
                new ObjectParameter("wash", wash) :
                new ObjectParameter("wash", typeof(decimal));
    
            var convpParameter = convp.HasValue ?
                new ObjectParameter("convp", convp) :
                new ObjectParameter("convp", typeof(decimal));
    
            var convParameter = conv.HasValue ?
                new ObjectParameter("conv", conv) :
                new ObjectParameter("conv", typeof(decimal));
    
            var tiffinpParameter = tiffinp.HasValue ?
                new ObjectParameter("tiffinp", tiffinp) :
                new ObjectParameter("tiffinp", typeof(decimal));
    
            var tiffinParameter = tiffin.HasValue ?
                new ObjectParameter("tiffin", tiffin) :
                new ObjectParameter("tiffin", typeof(decimal));
    
            var pfpParameter = pfp.HasValue ?
                new ObjectParameter("pfp", pfp) :
                new ObjectParameter("pfp", typeof(decimal));
    
            var pfParameter = pf.HasValue ?
                new ObjectParameter("pf", pf) :
                new ObjectParameter("pf", typeof(decimal));
    
            var esicpParameter = esicp.HasValue ?
                new ObjectParameter("esicp", esicp) :
                new ObjectParameter("esicp", typeof(decimal));
    
            var esicParameter = esic.HasValue ?
                new ObjectParameter("esic", esic) :
                new ObjectParameter("esic", typeof(decimal));
    
            var bonuspParameter = bonusp.HasValue ?
                new ObjectParameter("bonusp", bonusp) :
                new ObjectParameter("bonusp", typeof(decimal));
    
            var bonusParameter = bonus.HasValue ?
                new ObjectParameter("bonus", bonus) :
                new ObjectParameter("bonus", typeof(decimal));
    
            var gratuitypParameter = gratuityp.HasValue ?
                new ObjectParameter("gratuityp", gratuityp) :
                new ObjectParameter("gratuityp", typeof(decimal));
    
            var gratuityParameter = gratuity.HasValue ?
                new ObjectParameter("gratuity", gratuity) :
                new ObjectParameter("gratuity", typeof(decimal));
    
            var leavepParameter = leavep.HasValue ?
                new ObjectParameter("leavep", leavep) :
                new ObjectParameter("leavep", typeof(decimal));
    
            var leaveamtParameter = leaveamt.HasValue ?
                new ObjectParameter("leaveamt", leaveamt) :
                new ObjectParameter("leaveamt", typeof(decimal));
    
            var rchpParameter = rchp.HasValue ?
                new ObjectParameter("rchp", rchp) :
                new ObjectParameter("rchp", typeof(decimal));
    
            var rchamtParameter = rchamt.HasValue ?
                new ObjectParameter("rchamt", rchamt) :
                new ObjectParameter("rchamt", typeof(decimal));
    
            var adminpParameter = adminp.HasValue ?
                new ObjectParameter("adminp", adminp) :
                new ObjectParameter("adminp", typeof(decimal));
    
            var adminamtParameter = adminamt.HasValue ?
                new ObjectParameter("adminamt", adminamt) :
                new ObjectParameter("adminamt", typeof(decimal));
    
            var svcchgpParameter = svcchgp.HasValue ?
                new ObjectParameter("svcchgp", svcchgp) :
                new ObjectParameter("svcchgp", typeof(decimal));
    
            var svcchgParameter = svcchg.HasValue ?
                new ObjectParameter("svcchg", svcchg) :
                new ObjectParameter("svcchg", typeof(decimal));
    
            var total1Parameter = total1.HasValue ?
                new ObjectParameter("total1", total1) :
                new ObjectParameter("total1", typeof(decimal));
    
            var total2Parameter = total2.HasValue ?
                new ObjectParameter("total2", total2) :
                new ObjectParameter("total2", typeof(decimal));
    
            var total3Parameter = total3.HasValue ?
                new ObjectParameter("total3", total3) :
                new ObjectParameter("total3", typeof(decimal));
    
            var trcostParameter = trcost.HasValue ?
                new ObjectParameter("trcost", trcost) :
                new ObjectParameter("trcost", typeof(decimal));
    
            var macostParameter = macost.HasValue ?
                new ObjectParameter("macost", macost) :
                new ObjectParameter("macost", typeof(decimal));
    
            var mobcostParameter = mobcost.HasValue ?
                new ObjectParameter("mobcost", mobcost) :
                new ObjectParameter("mobcost", typeof(decimal));
    
            var unicostParameter = unicost.HasValue ?
                new ObjectParameter("unicost", unicost) :
                new ObjectParameter("unicost", typeof(decimal));
    
            var nholicostParameter = nholicost.HasValue ?
                new ObjectParameter("nholicost", nholicost) :
                new ObjectParameter("nholicost", typeof(decimal));
    
            var incentiveParameter = incentive.HasValue ?
                new ObjectParameter("incentive", incentive) :
                new ObjectParameter("incentive", typeof(decimal));
    
            var total5Parameter = total5.HasValue ?
                new ObjectParameter("total5", total5) :
                new ObjectParameter("total5", typeof(decimal));
    
            var total4Parameter = total4.HasValue ?
                new ObjectParameter("total4", total4) :
                new ObjectParameter("total4", typeof(decimal));
    
            var billrateParameter = billrate.HasValue ?
                new ObjectParameter("billrate", billrate) :
                new ObjectParameter("billrate", typeof(decimal));
    
            var workDaysParameter = workDays.HasValue ?
                new ObjectParameter("WorkDays", workDays) :
                new ObjectParameter("WorkDays", typeof(decimal));
    
            var empLeavepParameter = empLeavep.HasValue ?
                new ObjectParameter("EmpLeavep", empLeavep) :
                new ObjectParameter("EmpLeavep", typeof(decimal));
    
            var empLeaveAmtParameter = empLeaveAmt.HasValue ?
                new ObjectParameter("EmpLeaveAmt", empLeaveAmt) :
                new ObjectParameter("EmpLeaveAmt", typeof(decimal));
    
            var leaveAddParameter = leaveAdd.HasValue ?
                new ObjectParameter("LeaveAdd", leaveAdd) :
                new ObjectParameter("LeaveAdd", typeof(decimal));
    
            var empBonuspParameter = empBonusp.HasValue ?
                new ObjectParameter("EmpBonusp", empBonusp) :
                new ObjectParameter("EmpBonusp", typeof(decimal));
    
            var empBonusAmtParameter = empBonusAmt.HasValue ?
                new ObjectParameter("EmpBonusAmt", empBonusAmt) :
                new ObjectParameter("EmpBonusAmt", typeof(decimal));
    
            var bonusAddParameter = bonusAdd.HasValue ?
                new ObjectParameter("BonusAdd", bonusAdd) :
                new ObjectParameter("BonusAdd", typeof(decimal));
    
            var esicAllowParameter = esicAllow.HasValue ?
                new ObjectParameter("EsicAllow", esicAllow) :
                new ObjectParameter("EsicAllow", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AddClientDetails2", clcodeParameter, nameParameter, categoryParameter, strengthParameter, siteParameter, exhrsParameter, minwageParameter, examtParameter, basicpParameter, basicParameter, hrapParameter, hraParameter, washpParameter, washParameter, convpParameter, convParameter, tiffinpParameter, tiffinParameter, pfpParameter, pfParameter, esicpParameter, esicParameter, bonuspParameter, bonusParameter, gratuitypParameter, gratuityParameter, leavepParameter, leaveamtParameter, rchpParameter, rchamtParameter, adminpParameter, adminamtParameter, svcchgpParameter, svcchgParameter, total1Parameter, total2Parameter, total3Parameter, trcostParameter, macostParameter, mobcostParameter, unicostParameter, nholicostParameter, incentiveParameter, total5Parameter, total4Parameter, billrateParameter, workDaysParameter, empLeavepParameter, empLeaveAmtParameter, leaveAddParameter, empBonuspParameter, empBonusAmtParameter, bonusAddParameter, esicAllowParameter, errorOut);
        }
    
        public virtual int usp_AddClientMaster(Nullable<int> csu, string clcode, string contractType, string name, string addr, string cpname, string mob, string ophno, string cemailid, string phno1, string phno2, string phno3, string faxno, string emailid, Nullable<System.DateTime> cperiodfrm, Nullable<System.DateTime> cperiodto, string branchloc, string brnch, string paybasis, string agreement, string remarks, string mnth, string jyear, ObjectParameter errorOut)
        {
            var csuParameter = csu.HasValue ?
                new ObjectParameter("csu", csu) :
                new ObjectParameter("csu", typeof(int));
    
            var clcodeParameter = clcode != null ?
                new ObjectParameter("clcode", clcode) :
                new ObjectParameter("clcode", typeof(string));
    
            var contractTypeParameter = contractType != null ?
                new ObjectParameter("ContractType", contractType) :
                new ObjectParameter("ContractType", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var addrParameter = addr != null ?
                new ObjectParameter("addr", addr) :
                new ObjectParameter("addr", typeof(string));
    
            var cpnameParameter = cpname != null ?
                new ObjectParameter("cpname", cpname) :
                new ObjectParameter("cpname", typeof(string));
    
            var mobParameter = mob != null ?
                new ObjectParameter("mob", mob) :
                new ObjectParameter("mob", typeof(string));
    
            var ophnoParameter = ophno != null ?
                new ObjectParameter("ophno", ophno) :
                new ObjectParameter("ophno", typeof(string));
    
            var cemailidParameter = cemailid != null ?
                new ObjectParameter("cemailid", cemailid) :
                new ObjectParameter("cemailid", typeof(string));
    
            var phno1Parameter = phno1 != null ?
                new ObjectParameter("phno1", phno1) :
                new ObjectParameter("phno1", typeof(string));
    
            var phno2Parameter = phno2 != null ?
                new ObjectParameter("phno2", phno2) :
                new ObjectParameter("phno2", typeof(string));
    
            var phno3Parameter = phno3 != null ?
                new ObjectParameter("phno3", phno3) :
                new ObjectParameter("phno3", typeof(string));
    
            var faxnoParameter = faxno != null ?
                new ObjectParameter("faxno", faxno) :
                new ObjectParameter("faxno", typeof(string));
    
            var emailidParameter = emailid != null ?
                new ObjectParameter("emailid", emailid) :
                new ObjectParameter("emailid", typeof(string));
    
            var cperiodfrmParameter = cperiodfrm.HasValue ?
                new ObjectParameter("cperiodfrm", cperiodfrm) :
                new ObjectParameter("cperiodfrm", typeof(System.DateTime));
    
            var cperiodtoParameter = cperiodto.HasValue ?
                new ObjectParameter("cperiodto", cperiodto) :
                new ObjectParameter("cperiodto", typeof(System.DateTime));
    
            var branchlocParameter = branchloc != null ?
                new ObjectParameter("branchloc", branchloc) :
                new ObjectParameter("branchloc", typeof(string));
    
            var brnchParameter = brnch != null ?
                new ObjectParameter("brnch", brnch) :
                new ObjectParameter("brnch", typeof(string));
    
            var paybasisParameter = paybasis != null ?
                new ObjectParameter("paybasis", paybasis) :
                new ObjectParameter("paybasis", typeof(string));
    
            var agreementParameter = agreement != null ?
                new ObjectParameter("Agreement", agreement) :
                new ObjectParameter("Agreement", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var mnthParameter = mnth != null ?
                new ObjectParameter("mnth", mnth) :
                new ObjectParameter("mnth", typeof(string));
    
            var jyearParameter = jyear != null ?
                new ObjectParameter("jyear", jyear) :
                new ObjectParameter("jyear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AddClientMaster", csuParameter, clcodeParameter, contractTypeParameter, nameParameter, addrParameter, cpnameParameter, mobParameter, ophnoParameter, cemailidParameter, phno1Parameter, phno2Parameter, phno3Parameter, faxnoParameter, emailidParameter, cperiodfrmParameter, cperiodtoParameter, branchlocParameter, brnchParameter, paybasisParameter, agreementParameter, remarksParameter, mnthParameter, jyearParameter, errorOut);
        }
    
        public virtual int usp_AddClientMaster2(Nullable<int> csu, string clcode, string contractType, string name, string addr, string cpname, string mob, string ophno, string cemailid, string phno1, string phno2, string phno3, string faxno, string emailid, Nullable<System.DateTime> cperiodfrm, Nullable<System.DateTime> cperiodto, string branchloc, string brnch, string paybasis, string agreement, string remarks, string mnth, string jyear, ObjectParameter errorOut)
        {
            var csuParameter = csu.HasValue ?
                new ObjectParameter("csu", csu) :
                new ObjectParameter("csu", typeof(int));
    
            var clcodeParameter = clcode != null ?
                new ObjectParameter("clcode", clcode) :
                new ObjectParameter("clcode", typeof(string));
    
            var contractTypeParameter = contractType != null ?
                new ObjectParameter("ContractType", contractType) :
                new ObjectParameter("ContractType", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var addrParameter = addr != null ?
                new ObjectParameter("addr", addr) :
                new ObjectParameter("addr", typeof(string));
    
            var cpnameParameter = cpname != null ?
                new ObjectParameter("cpname", cpname) :
                new ObjectParameter("cpname", typeof(string));
    
            var mobParameter = mob != null ?
                new ObjectParameter("mob", mob) :
                new ObjectParameter("mob", typeof(string));
    
            var ophnoParameter = ophno != null ?
                new ObjectParameter("ophno", ophno) :
                new ObjectParameter("ophno", typeof(string));
    
            var cemailidParameter = cemailid != null ?
                new ObjectParameter("cemailid", cemailid) :
                new ObjectParameter("cemailid", typeof(string));
    
            var phno1Parameter = phno1 != null ?
                new ObjectParameter("phno1", phno1) :
                new ObjectParameter("phno1", typeof(string));
    
            var phno2Parameter = phno2 != null ?
                new ObjectParameter("phno2", phno2) :
                new ObjectParameter("phno2", typeof(string));
    
            var phno3Parameter = phno3 != null ?
                new ObjectParameter("phno3", phno3) :
                new ObjectParameter("phno3", typeof(string));
    
            var faxnoParameter = faxno != null ?
                new ObjectParameter("faxno", faxno) :
                new ObjectParameter("faxno", typeof(string));
    
            var emailidParameter = emailid != null ?
                new ObjectParameter("emailid", emailid) :
                new ObjectParameter("emailid", typeof(string));
    
            var cperiodfrmParameter = cperiodfrm.HasValue ?
                new ObjectParameter("cperiodfrm", cperiodfrm) :
                new ObjectParameter("cperiodfrm", typeof(System.DateTime));
    
            var cperiodtoParameter = cperiodto.HasValue ?
                new ObjectParameter("cperiodto", cperiodto) :
                new ObjectParameter("cperiodto", typeof(System.DateTime));
    
            var branchlocParameter = branchloc != null ?
                new ObjectParameter("branchloc", branchloc) :
                new ObjectParameter("branchloc", typeof(string));
    
            var brnchParameter = brnch != null ?
                new ObjectParameter("brnch", brnch) :
                new ObjectParameter("brnch", typeof(string));
    
            var paybasisParameter = paybasis != null ?
                new ObjectParameter("paybasis", paybasis) :
                new ObjectParameter("paybasis", typeof(string));
    
            var agreementParameter = agreement != null ?
                new ObjectParameter("Agreement", agreement) :
                new ObjectParameter("Agreement", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var mnthParameter = mnth != null ?
                new ObjectParameter("mnth", mnth) :
                new ObjectParameter("mnth", typeof(string));
    
            var jyearParameter = jyear != null ?
                new ObjectParameter("jyear", jyear) :
                new ObjectParameter("jyear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AddClientMaster2", csuParameter, clcodeParameter, contractTypeParameter, nameParameter, addrParameter, cpnameParameter, mobParameter, ophnoParameter, cemailidParameter, phno1Parameter, phno2Parameter, phno3Parameter, faxnoParameter, emailidParameter, cperiodfrmParameter, cperiodtoParameter, branchlocParameter, brnchParameter, paybasisParameter, agreementParameter, remarksParameter, mnthParameter, jyearParameter, errorOut);
        }
    
        public virtual int usp_AddComment(Nullable<long> blogId, string cDetails, string memberId, string authorName, ObjectParameter commentId, ObjectParameter errorOut)
        {
            var blogIdParameter = blogId.HasValue ?
                new ObjectParameter("BlogId", blogId) :
                new ObjectParameter("BlogId", typeof(long));
    
            var cDetailsParameter = cDetails != null ?
                new ObjectParameter("CDetails", cDetails) :
                new ObjectParameter("CDetails", typeof(string));
    
            var memberIdParameter = memberId != null ?
                new ObjectParameter("MemberId", memberId) :
                new ObjectParameter("MemberId", typeof(string));
    
            var authorNameParameter = authorName != null ?
                new ObjectParameter("AuthorName", authorName) :
                new ObjectParameter("AuthorName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AddComment", blogIdParameter, cDetailsParameter, memberIdParameter, authorNameParameter, commentId, errorOut);
        }
    
        public virtual int usp_AddConferenceDetails(string day, string cDate, string title, string subTitle, Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime, string hall, string details, ObjectParameter cId, ObjectParameter errorOut)
        {
            var dayParameter = day != null ?
                new ObjectParameter("Day", day) :
                new ObjectParameter("Day", typeof(string));
    
            var cDateParameter = cDate != null ?
                new ObjectParameter("CDate", cDate) :
                new ObjectParameter("CDate", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var subTitleParameter = subTitle != null ?
                new ObjectParameter("SubTitle", subTitle) :
                new ObjectParameter("SubTitle", typeof(string));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));
    
            var hallParameter = hall != null ?
                new ObjectParameter("Hall", hall) :
                new ObjectParameter("Hall", typeof(string));
    
            var detailsParameter = details != null ?
                new ObjectParameter("Details", details) :
                new ObjectParameter("Details", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AddConferenceDetails", dayParameter, cDateParameter, titleParameter, subTitleParameter, startTimeParameter, endTimeParameter, hallParameter, detailsParameter, cId, errorOut);
        }
    
        public virtual int usp_AddDocDetail(string docid, string docname, string hadd, string cadd, string hphone, string mobile, string cphone, string ncode, ObjectParameter slno, ObjectParameter errorOut)
        {
            var docidParameter = docid != null ?
                new ObjectParameter("docid", docid) :
                new ObjectParameter("docid", typeof(string));
    
            var docnameParameter = docname != null ?
                new ObjectParameter("docname", docname) :
                new ObjectParameter("docname", typeof(string));
    
            var haddParameter = hadd != null ?
                new ObjectParameter("hadd", hadd) :
                new ObjectParameter("hadd", typeof(string));
    
            var caddParameter = cadd != null ?
                new ObjectParameter("cadd", cadd) :
                new ObjectParameter("cadd", typeof(string));
    
            var hphoneParameter = hphone != null ?
                new ObjectParameter("hphone", hphone) :
                new ObjectParameter("hphone", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var cphoneParameter = cphone != null ?
                new ObjectParameter("cphone", cphone) :
                new ObjectParameter("cphone", typeof(string));
    
            var ncodeParameter = ncode != null ?
                new ObjectParameter("ncode", ncode) :
                new ObjectParameter("ncode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AddDocDetail", docidParameter, docnameParameter, haddParameter, caddParameter, hphoneParameter, mobileParameter, cphoneParameter, ncodeParameter, slno, errorOut);
        }
    
        public virtual int usp_AddEmpMaster(string empid, string empsu, string etype, string jyear, string name, string sex, string fname, string address, string mobno, string phno, string email, string photo, string category, string loccode, string branch, string pfno, string fdate, string esicno, string crdrefno, string acctno, string bankname, string branch1, string dob, string doj, string dol, string dregno, string dname, string dmobno, string dphno, string demail, string reason, string tag, string lfyear, string item1, string item2, string item3, string item4, string item5, ObjectParameter sl, ObjectParameter errorOut)
        {
            var empidParameter = empid != null ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(string));
    
            var empsuParameter = empsu != null ?
                new ObjectParameter("empsu", empsu) :
                new ObjectParameter("empsu", typeof(string));
    
            var etypeParameter = etype != null ?
                new ObjectParameter("etype", etype) :
                new ObjectParameter("etype", typeof(string));
    
            var jyearParameter = jyear != null ?
                new ObjectParameter("jyear", jyear) :
                new ObjectParameter("jyear", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var sexParameter = sex != null ?
                new ObjectParameter("sex", sex) :
                new ObjectParameter("sex", typeof(string));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var mobnoParameter = mobno != null ?
                new ObjectParameter("mobno", mobno) :
                new ObjectParameter("mobno", typeof(string));
    
            var phnoParameter = phno != null ?
                new ObjectParameter("phno", phno) :
                new ObjectParameter("phno", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(string));
    
            var loccodeParameter = loccode != null ?
                new ObjectParameter("loccode", loccode) :
                new ObjectParameter("loccode", typeof(string));
    
            var branchParameter = branch != null ?
                new ObjectParameter("branch", branch) :
                new ObjectParameter("branch", typeof(string));
    
            var pfnoParameter = pfno != null ?
                new ObjectParameter("pfno", pfno) :
                new ObjectParameter("pfno", typeof(string));
    
            var fdateParameter = fdate != null ?
                new ObjectParameter("fdate", fdate) :
                new ObjectParameter("fdate", typeof(string));
    
            var esicnoParameter = esicno != null ?
                new ObjectParameter("esicno", esicno) :
                new ObjectParameter("esicno", typeof(string));
    
            var crdrefnoParameter = crdrefno != null ?
                new ObjectParameter("crdrefno", crdrefno) :
                new ObjectParameter("crdrefno", typeof(string));
    
            var acctnoParameter = acctno != null ?
                new ObjectParameter("acctno", acctno) :
                new ObjectParameter("acctno", typeof(string));
    
            var banknameParameter = bankname != null ?
                new ObjectParameter("bankname", bankname) :
                new ObjectParameter("bankname", typeof(string));
    
            var branch1Parameter = branch1 != null ?
                new ObjectParameter("branch1", branch1) :
                new ObjectParameter("branch1", typeof(string));
    
            var dobParameter = dob != null ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(string));
    
            var dojParameter = doj != null ?
                new ObjectParameter("doj", doj) :
                new ObjectParameter("doj", typeof(string));
    
            var dolParameter = dol != null ?
                new ObjectParameter("dol", dol) :
                new ObjectParameter("dol", typeof(string));
    
            var dregnoParameter = dregno != null ?
                new ObjectParameter("dregno", dregno) :
                new ObjectParameter("dregno", typeof(string));
    
            var dnameParameter = dname != null ?
                new ObjectParameter("dname", dname) :
                new ObjectParameter("dname", typeof(string));
    
            var dmobnoParameter = dmobno != null ?
                new ObjectParameter("dmobno", dmobno) :
                new ObjectParameter("dmobno", typeof(string));
    
            var dphnoParameter = dphno != null ?
                new ObjectParameter("dphno", dphno) :
                new ObjectParameter("dphno", typeof(string));
    
            var demailParameter = demail != null ?
                new ObjectParameter("demail", demail) :
                new ObjectParameter("demail", typeof(string));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("reason", reason) :
                new ObjectParameter("reason", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("tag", tag) :
                new ObjectParameter("tag", typeof(string));
    
            var lfyearParameter = lfyear != null ?
                new ObjectParameter("lfyear", lfyear) :
                new ObjectParameter("lfyear", typeof(string));
    
            var item1Parameter = item1 != null ?
                new ObjectParameter("item1", item1) :
                new ObjectParameter("item1", typeof(string));
    
            var item2Parameter = item2 != null ?
                new ObjectParameter("item2", item2) :
                new ObjectParameter("item2", typeof(string));
    
            var item3Parameter = item3 != null ?
                new ObjectParameter("item3", item3) :
                new ObjectParameter("item3", typeof(string));
    
            var item4Parameter = item4 != null ?
                new ObjectParameter("item4", item4) :
                new ObjectParameter("item4", typeof(string));
    
            var item5Parameter = item5 != null ?
                new ObjectParameter("item5", item5) :
                new ObjectParameter("item5", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AddEmpMaster", empidParameter, empsuParameter, etypeParameter, jyearParameter, nameParameter, sexParameter, fnameParameter, addressParameter, mobnoParameter, phnoParameter, emailParameter, photoParameter, categoryParameter, loccodeParameter, branchParameter, pfnoParameter, fdateParameter, esicnoParameter, crdrefnoParameter, acctnoParameter, banknameParameter, branch1Parameter, dobParameter, dojParameter, dolParameter, dregnoParameter, dnameParameter, dmobnoParameter, dphnoParameter, demailParameter, reasonParameter, tagParameter, lfyearParameter, item1Parameter, item2Parameter, item3Parameter, item4Parameter, item5Parameter, sl, errorOut);
        }
    
        public virtual int usp_AddEmpUnitAssign(Nullable<int> mon, Nullable<int> yr, string brnch, string unit, string siteName, string empcode, string empName, Nullable<System.DateTime> appDt, Nullable<System.DateTime> frmDt, Nullable<System.DateTime> toDt, string rank, string fixHr, Nullable<decimal> totHr, Nullable<decimal> overHr, Nullable<int> absentDt, Nullable<int> totLeave, string day1, string day2, string day3, string day4, string day5, string day6, string day7, string day8, string day9, string day10, string day11, string day12, string day13, string day14, string day15, string day16, string day17, string day18, string day19, string day20, string day21, string day22, string day23, string day24, string day25, string day26, string day27, string day28, string day29, string day30, string day31, Nullable<int> status, string field1, string field2, string field3, string field4, string field5, string field6, string field7, string field8, ObjectParameter slNo, ObjectParameter errorOut)
        {
            var monParameter = mon.HasValue ?
                new ObjectParameter("Mon", mon) :
                new ObjectParameter("Mon", typeof(int));
    
            var yrParameter = yr.HasValue ?
                new ObjectParameter("Yr", yr) :
                new ObjectParameter("Yr", typeof(int));
    
            var brnchParameter = brnch != null ?
                new ObjectParameter("brnch", brnch) :
                new ObjectParameter("brnch", typeof(string));
    
            var unitParameter = unit != null ?
                new ObjectParameter("Unit", unit) :
                new ObjectParameter("Unit", typeof(string));
    
            var siteNameParameter = siteName != null ?
                new ObjectParameter("SiteName", siteName) :
                new ObjectParameter("SiteName", typeof(string));
    
            var empcodeParameter = empcode != null ?
                new ObjectParameter("empcode", empcode) :
                new ObjectParameter("empcode", typeof(string));
    
            var empNameParameter = empName != null ?
                new ObjectParameter("empName", empName) :
                new ObjectParameter("empName", typeof(string));
    
            var appDtParameter = appDt.HasValue ?
                new ObjectParameter("AppDt", appDt) :
                new ObjectParameter("AppDt", typeof(System.DateTime));
    
            var frmDtParameter = frmDt.HasValue ?
                new ObjectParameter("FrmDt", frmDt) :
                new ObjectParameter("FrmDt", typeof(System.DateTime));
    
            var toDtParameter = toDt.HasValue ?
                new ObjectParameter("ToDt", toDt) :
                new ObjectParameter("ToDt", typeof(System.DateTime));
    
            var rankParameter = rank != null ?
                new ObjectParameter("rank", rank) :
                new ObjectParameter("rank", typeof(string));
    
            var fixHrParameter = fixHr != null ?
                new ObjectParameter("FixHr", fixHr) :
                new ObjectParameter("FixHr", typeof(string));
    
            var totHrParameter = totHr.HasValue ?
                new ObjectParameter("TotHr", totHr) :
                new ObjectParameter("TotHr", typeof(decimal));
    
            var overHrParameter = overHr.HasValue ?
                new ObjectParameter("OverHr", overHr) :
                new ObjectParameter("OverHr", typeof(decimal));
    
            var absentDtParameter = absentDt.HasValue ?
                new ObjectParameter("AbsentDt", absentDt) :
                new ObjectParameter("AbsentDt", typeof(int));
    
            var totLeaveParameter = totLeave.HasValue ?
                new ObjectParameter("TotLeave", totLeave) :
                new ObjectParameter("TotLeave", typeof(int));
    
            var day1Parameter = day1 != null ?
                new ObjectParameter("Day1", day1) :
                new ObjectParameter("Day1", typeof(string));
    
            var day2Parameter = day2 != null ?
                new ObjectParameter("Day2", day2) :
                new ObjectParameter("Day2", typeof(string));
    
            var day3Parameter = day3 != null ?
                new ObjectParameter("Day3", day3) :
                new ObjectParameter("Day3", typeof(string));
    
            var day4Parameter = day4 != null ?
                new ObjectParameter("Day4", day4) :
                new ObjectParameter("Day4", typeof(string));
    
            var day5Parameter = day5 != null ?
                new ObjectParameter("Day5", day5) :
                new ObjectParameter("Day5", typeof(string));
    
            var day6Parameter = day6 != null ?
                new ObjectParameter("Day6", day6) :
                new ObjectParameter("Day6", typeof(string));
    
            var day7Parameter = day7 != null ?
                new ObjectParameter("Day7", day7) :
                new ObjectParameter("Day7", typeof(string));
    
            var day8Parameter = day8 != null ?
                new ObjectParameter("Day8", day8) :
                new ObjectParameter("Day8", typeof(string));
    
            var day9Parameter = day9 != null ?
                new ObjectParameter("Day9", day9) :
                new ObjectParameter("Day9", typeof(string));
    
            var day10Parameter = day10 != null ?
                new ObjectParameter("Day10", day10) :
                new ObjectParameter("Day10", typeof(string));
    
            var day11Parameter = day11 != null ?
                new ObjectParameter("Day11", day11) :
                new ObjectParameter("Day11", typeof(string));
    
            var day12Parameter = day12 != null ?
                new ObjectParameter("Day12", day12) :
                new ObjectParameter("Day12", typeof(string));
    
            var day13Parameter = day13 != null ?
                new ObjectParameter("Day13", day13) :
                new ObjectParameter("Day13", typeof(string));
    
            var day14Parameter = day14 != null ?
                new ObjectParameter("Day14", day14) :
                new ObjectParameter("Day14", typeof(string));
    
            var day15Parameter = day15 != null ?
                new ObjectParameter("Day15", day15) :
                new ObjectParameter("Day15", typeof(string));
    
            var day16Parameter = day16 != null ?
                new ObjectParameter("Day16", day16) :
                new ObjectParameter("Day16", typeof(string));
    
            var day17Parameter = day17 != null ?
                new ObjectParameter("Day17", day17) :
                new ObjectParameter("Day17", typeof(string));
    
            var day18Parameter = day18 != null ?
                new ObjectParameter("Day18", day18) :
                new ObjectParameter("Day18", typeof(string));
    
            var day19Parameter = day19 != null ?
                new ObjectParameter("Day19", day19) :
                new ObjectParameter("Day19", typeof(string));
    
            var day20Parameter = day20 != null ?
                new ObjectParameter("Day20", day20) :
                new ObjectParameter("Day20", typeof(string));
    
            var day21Parameter = day21 != null ?
                new ObjectParameter("Day21", day21) :
                new ObjectParameter("Day21", typeof(string));
    
            var day22Parameter = day22 != null ?
                new ObjectParameter("Day22", day22) :
                new ObjectParameter("Day22", typeof(string));
    
            var day23Parameter = day23 != null ?
                new ObjectParameter("Day23", day23) :
                new ObjectParameter("Day23", typeof(string));
    
            var day24Parameter = day24 != null ?
                new ObjectParameter("Day24", day24) :
                new ObjectParameter("Day24", typeof(string));
    
            var day25Parameter = day25 != null ?
                new ObjectParameter("Day25", day25) :
                new ObjectParameter("Day25", typeof(string));
    
            var day26Parameter = day26 != null ?
                new ObjectParameter("Day26", day26) :
                new ObjectParameter("Day26", typeof(string));
    
            var day27Parameter = day27 != null ?
                new ObjectParameter("Day27", day27) :
                new ObjectParameter("Day27", typeof(string));
    
            var day28Parameter = day28 != null ?
                new ObjectParameter("Day28", day28) :
                new ObjectParameter("Day28", typeof(string));
    
            var day29Parameter = day29 != null ?
                new ObjectParameter("Day29", day29) :
                new ObjectParameter("Day29", typeof(string));
    
            var day30Parameter = day30 != null ?
                new ObjectParameter("Day30", day30) :
                new ObjectParameter("Day30", typeof(string));
    
            var day31Parameter = day31 != null ?
                new ObjectParameter("Day31", day31) :
                new ObjectParameter("Day31", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var field1Parameter = field1 != null ?
                new ObjectParameter("Field1", field1) :
                new ObjectParameter("Field1", typeof(string));
    
            var field2Parameter = field2 != null ?
                new ObjectParameter("Field2", field2) :
                new ObjectParameter("Field2", typeof(string));
    
            var field3Parameter = field3 != null ?
                new ObjectParameter("Field3", field3) :
                new ObjectParameter("Field3", typeof(string));
    
            var field4Parameter = field4 != null ?
                new ObjectParameter("Field4", field4) :
                new ObjectParameter("Field4", typeof(string));
    
            var field5Parameter = field5 != null ?
                new ObjectParameter("Field5", field5) :
                new ObjectParameter("Field5", typeof(string));
    
            var field6Parameter = field6 != null ?
                new ObjectParameter("Field6", field6) :
                new ObjectParameter("Field6", typeof(string));
    
            var field7Parameter = field7 != null ?
                new ObjectParameter("Field7", field7) :
                new ObjectParameter("Field7", typeof(string));
    
            var field8Parameter = field8 != null ?
                new ObjectParameter("Field8", field8) :
                new ObjectParameter("Field8", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AddEmpUnitAssign", monParameter, yrParameter, brnchParameter, unitParameter, siteNameParameter, empcodeParameter, empNameParameter, appDtParameter, frmDtParameter, toDtParameter, rankParameter, fixHrParameter, totHrParameter, overHrParameter, absentDtParameter, totLeaveParameter, day1Parameter, day2Parameter, day3Parameter, day4Parameter, day5Parameter, day6Parameter, day7Parameter, day8Parameter, day9Parameter, day10Parameter, day11Parameter, day12Parameter, day13Parameter, day14Parameter, day15Parameter, day16Parameter, day17Parameter, day18Parameter, day19Parameter, day20Parameter, day21Parameter, day22Parameter, day23Parameter, day24Parameter, day25Parameter, day26Parameter, day27Parameter, day28Parameter, day29Parameter, day30Parameter, day31Parameter, statusParameter, field1Parameter, field2Parameter, field3Parameter, field4Parameter, field5Parameter, field6Parameter, field7Parameter, field8Parameter, slNo, errorOut);
        }
    
        public virtual int usp_AddNonCsiMembers(string fullName, string password, string emailId, string pharmaName, string userName, string webcastName, string mobile, ObjectParameter userId, ObjectParameter errorOut)
        {
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var pharmaNameParameter = pharmaName != null ?
                new ObjectParameter("PharmaName", pharmaName) :
                new ObjectParameter("PharmaName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var webcastNameParameter = webcastName != null ?
                new ObjectParameter("WebcastName", webcastName) :
                new ObjectParameter("WebcastName", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AddNonCsiMembers", fullNameParameter, passwordParameter, emailIdParameter, pharmaNameParameter, userNameParameter, webcastNameParameter, mobileParameter, userId, errorOut);
        }
    
        public virtual int usp_UpdateBlog(string blogTitle, string blogDetails, Nullable<long> blogId, ObjectParameter errorOut)
        {
            var blogTitleParameter = blogTitle != null ?
                new ObjectParameter("BlogTitle", blogTitle) :
                new ObjectParameter("BlogTitle", typeof(string));
    
            var blogDetailsParameter = blogDetails != null ?
                new ObjectParameter("BlogDetails", blogDetails) :
                new ObjectParameter("BlogDetails", typeof(string));
    
            var blogIdParameter = blogId.HasValue ?
                new ObjectParameter("BlogId", blogId) :
                new ObjectParameter("BlogId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateBlog", blogTitleParameter, blogDetailsParameter, blogIdParameter, errorOut);
        }
    
        public virtual int usp_UpdateComment(string cDetails, Nullable<long> commentId, ObjectParameter errorOut)
        {
            var cDetailsParameter = cDetails != null ?
                new ObjectParameter("CDetails", cDetails) :
                new ObjectParameter("CDetails", typeof(string));
    
            var commentIdParameter = commentId.HasValue ?
                new ObjectParameter("CommentId", commentId) :
                new ObjectParameter("CommentId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateComment", cDetailsParameter, commentIdParameter, errorOut);
        }
    
        public virtual ObjectResult<ValidateUser_Result> ValidateUser(string loginEmail, string password)
        {
            var loginEmailParameter = loginEmail != null ?
                new ObjectParameter("LoginEmail", loginEmail) :
                new ObjectParameter("LoginEmail", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ValidateUser_Result>("ValidateUser", loginEmailParameter, passwordParameter);
        }
    
        public virtual int SP_RegistrationDetail_DeleteCommand(Nullable<long> original_RegId)
        {
            var original_RegIdParameter = original_RegId.HasValue ?
                new ObjectParameter("Original_RegId", original_RegId) :
                new ObjectParameter("Original_RegId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RegistrationDetail_DeleteCommand", original_RegIdParameter);
        }
    
        public virtual ObjectResult<SP_RegistrationDetail_InsertCommand_Result> SP_RegistrationDetail_InsertCommand(string prefix, string name, string dOB, string membership_Number, string category, string institution, string department, string designation, string degree, string nationality, string address, string city, string pin, string state, string country, string workPhone, string mobile, string fax, string email, string username, string password, string sponsorship, Nullable<int> status, Nullable<System.DateTime> createdDate, Nullable<long> modifiedBy, Nullable<System.DateTime> modifiedDate, Nullable<long> payment_Id, Nullable<decimal> payment_Amount, Nullable<long> extra1, Nullable<System.DateTime> extra2, string extra3, string extra4, string extra5, Nullable<long> extra6, Nullable<System.DateTime> extra7, string extra8, string extra9, string regno, string badge_Name, string foodtype, string paymentMode)
        {
            var prefixParameter = prefix != null ?
                new ObjectParameter("Prefix", prefix) :
                new ObjectParameter("Prefix", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var dOBParameter = dOB != null ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(string));
    
            var membership_NumberParameter = membership_Number != null ?
                new ObjectParameter("Membership_Number", membership_Number) :
                new ObjectParameter("Membership_Number", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var institutionParameter = institution != null ?
                new ObjectParameter("Institution", institution) :
                new ObjectParameter("Institution", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var degreeParameter = degree != null ?
                new ObjectParameter("Degree", degree) :
                new ObjectParameter("Degree", typeof(string));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var pinParameter = pin != null ?
                new ObjectParameter("Pin", pin) :
                new ObjectParameter("Pin", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var workPhoneParameter = workPhone != null ?
                new ObjectParameter("WorkPhone", workPhone) :
                new ObjectParameter("WorkPhone", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var sponsorshipParameter = sponsorship != null ?
                new ObjectParameter("Sponsorship", sponsorship) :
                new ObjectParameter("Sponsorship", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(long));
    
            var modifiedDateParameter = modifiedDate.HasValue ?
                new ObjectParameter("ModifiedDate", modifiedDate) :
                new ObjectParameter("ModifiedDate", typeof(System.DateTime));
    
            var payment_IdParameter = payment_Id.HasValue ?
                new ObjectParameter("Payment_Id", payment_Id) :
                new ObjectParameter("Payment_Id", typeof(long));
    
            var payment_AmountParameter = payment_Amount.HasValue ?
                new ObjectParameter("Payment_Amount", payment_Amount) :
                new ObjectParameter("Payment_Amount", typeof(decimal));
    
            var extra1Parameter = extra1.HasValue ?
                new ObjectParameter("Extra1", extra1) :
                new ObjectParameter("Extra1", typeof(long));
    
            var extra2Parameter = extra2.HasValue ?
                new ObjectParameter("Extra2", extra2) :
                new ObjectParameter("Extra2", typeof(System.DateTime));
    
            var extra3Parameter = extra3 != null ?
                new ObjectParameter("Extra3", extra3) :
                new ObjectParameter("Extra3", typeof(string));
    
            var extra4Parameter = extra4 != null ?
                new ObjectParameter("Extra4", extra4) :
                new ObjectParameter("Extra4", typeof(string));
    
            var extra5Parameter = extra5 != null ?
                new ObjectParameter("Extra5", extra5) :
                new ObjectParameter("Extra5", typeof(string));
    
            var extra6Parameter = extra6.HasValue ?
                new ObjectParameter("Extra6", extra6) :
                new ObjectParameter("Extra6", typeof(long));
    
            var extra7Parameter = extra7.HasValue ?
                new ObjectParameter("Extra7", extra7) :
                new ObjectParameter("Extra7", typeof(System.DateTime));
    
            var extra8Parameter = extra8 != null ?
                new ObjectParameter("Extra8", extra8) :
                new ObjectParameter("Extra8", typeof(string));
    
            var extra9Parameter = extra9 != null ?
                new ObjectParameter("Extra9", extra9) :
                new ObjectParameter("Extra9", typeof(string));
    
            var regnoParameter = regno != null ?
                new ObjectParameter("Regno", regno) :
                new ObjectParameter("Regno", typeof(string));
    
            var badge_NameParameter = badge_Name != null ?
                new ObjectParameter("Badge_Name", badge_Name) :
                new ObjectParameter("Badge_Name", typeof(string));
    
            var foodtypeParameter = foodtype != null ?
                new ObjectParameter("Foodtype", foodtype) :
                new ObjectParameter("Foodtype", typeof(string));
    
            var paymentModeParameter = paymentMode != null ?
                new ObjectParameter("PaymentMode", paymentMode) :
                new ObjectParameter("PaymentMode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_RegistrationDetail_InsertCommand_Result>("SP_RegistrationDetail_InsertCommand", prefixParameter, nameParameter, dOBParameter, membership_NumberParameter, categoryParameter, institutionParameter, departmentParameter, designationParameter, degreeParameter, nationalityParameter, addressParameter, cityParameter, pinParameter, stateParameter, countryParameter, workPhoneParameter, mobileParameter, faxParameter, emailParameter, usernameParameter, passwordParameter, sponsorshipParameter, statusParameter, createdDateParameter, modifiedByParameter, modifiedDateParameter, payment_IdParameter, payment_AmountParameter, extra1Parameter, extra2Parameter, extra3Parameter, extra4Parameter, extra5Parameter, extra6Parameter, extra7Parameter, extra8Parameter, extra9Parameter, regnoParameter, badge_NameParameter, foodtypeParameter, paymentModeParameter);
        }
    
        public virtual ObjectResult<SP_RegistrationDetail_SelectCommand_Result> SP_RegistrationDetail_SelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_RegistrationDetail_SelectCommand_Result>("SP_RegistrationDetail_SelectCommand");
        }
    
        public virtual ObjectResult<SP_RegistrationDetail_UpdateCommand_Result> SP_RegistrationDetail_UpdateCommand(string prefix, string name, string dOB, string membership_Number, string category, string institution, string department, string designation, string degree, string nationality, string address, string city, string pin, string state, string country, string workPhone, string mobile, string fax, string email, string username, string password, string sponsorship, Nullable<int> status, Nullable<System.DateTime> createdDate, Nullable<long> modifiedBy, Nullable<System.DateTime> modifiedDate, Nullable<long> payment_Id, Nullable<decimal> payment_Amount, Nullable<long> extra1, Nullable<System.DateTime> extra2, string extra3, string extra4, string extra5, Nullable<long> extra6, Nullable<System.DateTime> extra7, string extra8, string extra9, string regno, string badge_Name, string foodtype, string paymentMode, Nullable<long> original_RegId, Nullable<long> regId)
        {
            var prefixParameter = prefix != null ?
                new ObjectParameter("Prefix", prefix) :
                new ObjectParameter("Prefix", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var dOBParameter = dOB != null ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(string));
    
            var membership_NumberParameter = membership_Number != null ?
                new ObjectParameter("Membership_Number", membership_Number) :
                new ObjectParameter("Membership_Number", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var institutionParameter = institution != null ?
                new ObjectParameter("Institution", institution) :
                new ObjectParameter("Institution", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var degreeParameter = degree != null ?
                new ObjectParameter("Degree", degree) :
                new ObjectParameter("Degree", typeof(string));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var pinParameter = pin != null ?
                new ObjectParameter("Pin", pin) :
                new ObjectParameter("Pin", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var workPhoneParameter = workPhone != null ?
                new ObjectParameter("WorkPhone", workPhone) :
                new ObjectParameter("WorkPhone", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var sponsorshipParameter = sponsorship != null ?
                new ObjectParameter("Sponsorship", sponsorship) :
                new ObjectParameter("Sponsorship", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(long));
    
            var modifiedDateParameter = modifiedDate.HasValue ?
                new ObjectParameter("ModifiedDate", modifiedDate) :
                new ObjectParameter("ModifiedDate", typeof(System.DateTime));
    
            var payment_IdParameter = payment_Id.HasValue ?
                new ObjectParameter("Payment_Id", payment_Id) :
                new ObjectParameter("Payment_Id", typeof(long));
    
            var payment_AmountParameter = payment_Amount.HasValue ?
                new ObjectParameter("Payment_Amount", payment_Amount) :
                new ObjectParameter("Payment_Amount", typeof(decimal));
    
            var extra1Parameter = extra1.HasValue ?
                new ObjectParameter("Extra1", extra1) :
                new ObjectParameter("Extra1", typeof(long));
    
            var extra2Parameter = extra2.HasValue ?
                new ObjectParameter("Extra2", extra2) :
                new ObjectParameter("Extra2", typeof(System.DateTime));
    
            var extra3Parameter = extra3 != null ?
                new ObjectParameter("Extra3", extra3) :
                new ObjectParameter("Extra3", typeof(string));
    
            var extra4Parameter = extra4 != null ?
                new ObjectParameter("Extra4", extra4) :
                new ObjectParameter("Extra4", typeof(string));
    
            var extra5Parameter = extra5 != null ?
                new ObjectParameter("Extra5", extra5) :
                new ObjectParameter("Extra5", typeof(string));
    
            var extra6Parameter = extra6.HasValue ?
                new ObjectParameter("Extra6", extra6) :
                new ObjectParameter("Extra6", typeof(long));
    
            var extra7Parameter = extra7.HasValue ?
                new ObjectParameter("Extra7", extra7) :
                new ObjectParameter("Extra7", typeof(System.DateTime));
    
            var extra8Parameter = extra8 != null ?
                new ObjectParameter("Extra8", extra8) :
                new ObjectParameter("Extra8", typeof(string));
    
            var extra9Parameter = extra9 != null ?
                new ObjectParameter("Extra9", extra9) :
                new ObjectParameter("Extra9", typeof(string));
    
            var regnoParameter = regno != null ?
                new ObjectParameter("Regno", regno) :
                new ObjectParameter("Regno", typeof(string));
    
            var badge_NameParameter = badge_Name != null ?
                new ObjectParameter("Badge_Name", badge_Name) :
                new ObjectParameter("Badge_Name", typeof(string));
    
            var foodtypeParameter = foodtype != null ?
                new ObjectParameter("Foodtype", foodtype) :
                new ObjectParameter("Foodtype", typeof(string));
    
            var paymentModeParameter = paymentMode != null ?
                new ObjectParameter("PaymentMode", paymentMode) :
                new ObjectParameter("PaymentMode", typeof(string));
    
            var original_RegIdParameter = original_RegId.HasValue ?
                new ObjectParameter("Original_RegId", original_RegId) :
                new ObjectParameter("Original_RegId", typeof(long));
    
            var regIdParameter = regId.HasValue ?
                new ObjectParameter("RegId", regId) :
                new ObjectParameter("RegId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_RegistrationDetail_UpdateCommand_Result>("SP_RegistrationDetail_UpdateCommand", prefixParameter, nameParameter, dOBParameter, membership_NumberParameter, categoryParameter, institutionParameter, departmentParameter, designationParameter, degreeParameter, nationalityParameter, addressParameter, cityParameter, pinParameter, stateParameter, countryParameter, workPhoneParameter, mobileParameter, faxParameter, emailParameter, usernameParameter, passwordParameter, sponsorshipParameter, statusParameter, createdDateParameter, modifiedByParameter, modifiedDateParameter, payment_IdParameter, payment_AmountParameter, extra1Parameter, extra2Parameter, extra3Parameter, extra4Parameter, extra5Parameter, extra6Parameter, extra7Parameter, extra8Parameter, extra9Parameter, regnoParameter, badge_NameParameter, foodtypeParameter, paymentModeParameter, original_RegIdParameter, regIdParameter);
        }
    }
}
